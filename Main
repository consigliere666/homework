import java.io.BufferedReader; 
import java.io.FileReader;    
import java.io.IOException;    
import java.util.Set;          
import java.util.List;          

public class Main { // 定义Main类，所有Java程序都需要有一个public类作为入口
    public static void main(String[] args) { // main方法是程序的入口点，参数args用于传递命令行参数
        SubwayMap subwayMap = new SubwayMap(); // 创建SubwayMap类的实例，用于存储地铁线路和站点信息
        onewayticket onewayticket = new onewayticket(); // 创建onewayticket类的实例，用于计算一次票

        try (BufferedReader br = new BufferedReader(new FileReader("D:/subway.txt"))) { // 尝试打开路径为"D:/subway.txt"的文件，并创建BufferedReader对象
            String line; // 定义一个字符串变量line，用于存储从文件中读取的每一行
            String currentLine = null; // 定义一个字符串变量currentLine，初始值为null，用于存储当前处理的线路名称

            while ((line = br.readLine()) != null) { // 循环读取文件的每一行，直到文件结束
                if (line.contains("号线站点间距")) { // 如果行包含"号线站点间距"字符串
                    currentLine = line.split("号线站点间距")[0]; // 分割字符串并获取线路名称
                    subwayMap.addLine(currentLine); // 调用SubwayMap的addLine方法添加线路
                } else if (line.contains("---") || line.contains("—")) { // 如果行包含"---"或"—"分隔符
                    String separator = line.contains("---") ? "---" : "—"
                    String[] parts = line.split(separator)
                    String station1 = parts[0].trim(); // 获取第一个站点名称

                    String station2 = parts[1].split("\t")[0].trim(); // 获取第二个站点名称
                    double distance = Double.parseDouble(parts[1].split("\t")[1].trim()); // 解析站点间的距离
                    subwayMap.addStation(currentLine, station1, distance); // 调用SubwayMap的addStation方法添加站点
                    subwayMap.addStation(currentLine, station2, distance); // 这里可能是一个错误，因为通常只需要添加一次站点对
                }
            }
        } catch (IOException e) { // 捕获并处理IO异常
            e.printStackTrace(); // 打印异常堆栈信息
        }
        System.out.println(subwayMap)
        Set<String> transferStations = subwayMap.getTransferStations(); // 获取所有换乘站点
        System.out.println("Transfer Stations:"); // 打印换乘站点的提示信息
        for (String station : transferStations) { // 遍历所有换乘站点
            System.out.println(station); // 打印每个换乘站点的名称
        }
        List<String> l1 = subwayMap.findStationsWithinDistance("洪山广场", 4); // 查找距离"洪山广场"4站以内的所有站点
        System.out.println(l1); // 打印找到的站点列表
        subwayMap.test3(); // 调用SubwayMap的test3方法
    }
}